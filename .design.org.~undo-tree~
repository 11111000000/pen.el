"4afdde7c4bf6ea8d5ced70e9000a2993875e826a"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#6=[nil nil ((551 . 707) (#("Toggle token highlighting which
indicates how likely a token was to be generated. Helps to debug a given
generation, or see alternative options for a token." 0 6 (fontified t wrap-prefix #1="") 6 12 (fontified t wrap-prefix #1# insert-in-front-hooks #2=(annotate--remove-annotation-property)) 12 31 (fontified t wrap-prefix #1# insert-in-front-hooks #2#) 31 32 (fontified t wrap-prefix #1# insert-in-front-hooks #2#) 32 70 (fontified t wrap-prefix #1#) 70 71 (fontified t insert-in-front-hooks #2# wrap-prefix #1#) 71 104 (fontified t wrap-prefix #1# insert-in-front-hooks #2#) 104 105 (fontified t wrap-prefix #1# display nil face default insert-in-front-hooks #2#) 105 147 (fontified t wrap-prefix #1#) 147 148 (fontified t wrap-prefix #1#) 148 155 (fontified t wrap-prefix #1#) 155 156 (fontified t rear-nonsticky t wrap-prefix #1#)) . 551) (undo-tree-id92 . -156) (undo-tree-id93 . -32) (undo-tree-id94 . -156) (undo-tree-id95 . -156) (undo-tree-id96 . -147) (undo-tree-id97 . -156) (undo-tree-id98 . -105) (undo-tree-id99 . -147) (undo-tree-id100 . -70) (undo-tree-id101 . -105) (undo-tree-id102 . -70) (undo-tree-id103 . -70) (undo-tree-id104 . -32) (undo-tree-id105 . -70) (undo-tree-id106 . -32) (undo-tree-id107 . -6) (undo-tree-id108 . -6) (undo-tree-id109 . -6) (undo-tree-id110 . -6) (undo-tree-id111 . -6) (undo-tree-id112 . -7) (undo-tree-id113 . -6) (undo-tree-id114 . -7) (undo-tree-id115 . -7) (undo-tree-id116 . -7) (undo-tree-id117 . -8) (undo-tree-id118 . -8) (undo-tree-id119 . -7) (undo-tree-id120 . -9) (undo-tree-id121 . -9) (undo-tree-id122 . -8) (undo-tree-id123 . -10) (undo-tree-id124 . -10) (undo-tree-id125 . -9) (undo-tree-id126 . -11) (undo-tree-id127 . -11) (undo-tree-id128 . -10) (undo-tree-id129 . -12) (undo-tree-id130 . -12) (undo-tree-id131 . -11) (undo-tree-id132 . -12) (undo-tree-id133 . -12) (undo-tree-id134 . -12) (undo-tree-id135 . -32) (undo-tree-id136 . -32) (undo-tree-id137 . -32) (undo-tree-id138 . -32) (undo-tree-id139 . -32) (undo-tree-id140 . -32) (undo-tree-id141 . -32) (undo-tree-id142 . -56) (undo-tree-id143 . -32) (undo-tree-id144 . -56) (undo-tree-id145 . -56) (undo-tree-id146 . -56) (undo-tree-id147 . -57) (undo-tree-id148 . -57) (undo-tree-id149 . -56) (undo-tree-id150 . -57) (undo-tree-id151 . -57) (undo-tree-id152 . -68) (undo-tree-id153 . -57) (undo-tree-id154 . -68) (undo-tree-id155 . -68) (undo-tree-id156 . -68) (undo-tree-id157 . -68) (undo-tree-id158 . -69) (undo-tree-id159 . -69) (undo-tree-id160 . -68) (undo-tree-id161 . -70) (undo-tree-id162 . -70) (undo-tree-id163 . -69) (undo-tree-id164 . -70) (undo-tree-id165 . -70) (undo-tree-id166 . -70) (undo-tree-id167 . -70) (undo-tree-id168 . -70) (undo-tree-id169 . -70) (undo-tree-id170 . -70) (undo-tree-id171 . -70) (undo-tree-id172 . -32) (undo-tree-id173 . -32) (undo-tree-id174 . -105) (undo-tree-id175 . -105) (undo-tree-id176 . -147) (undo-tree-id177 . -147) (undo-tree-id178 . -70) (undo-tree-id179 . -70) (undo-tree-id180 . -70) (undo-tree-id181 . -104) (undo-tree-id182 . -70) (undo-tree-id183 . -104) (undo-tree-id184 . -147) (undo-tree-id185 . -104) (undo-tree-id186 . -105) (undo-tree-id187 . -147) (undo-tree-id188 . -105) (undo-tree-id189 . -105) (undo-tree-id190 . -105) (undo-tree-id191 . -147) (undo-tree-id192 . -147) (undo-tree-id193 . -105) (undo-tree-id194 . -105) (undo-tree-id195 . -147) (undo-tree-id196 . -156) (undo-tree-id197 . -105) (undo-tree-id198 . -32) (undo-tree-id199 . -156) (undo-tree-id200 . -156) (undo-tree-id201 . -156) (undo-tree-id202 . -156) (undo-tree-id203 . -105) (undo-tree-id204 . -156) (undo-tree-id205 . -32) (undo-tree-id206 . -105) (undo-tree-id207 . -32)) nil (24617 9642 257253 823000) 0 nil]) ((698 . 699) (#("
" 0 1 (fontified t wrap-prefix #1#)) . -698) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) 656 (t 24617 9635 882651 327000)) nil (24617 9642 257301 825000) 0 nil]) ((621 . 622) (#("
" 0 1 (fontified t wrap-prefix #1# display nil face default insert-in-front-hooks #2#)) . -621) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("
" 0 1 (fontified t wrap-prefix #1#)) . -621) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1)) nil (24617 9635 873062 431000) 0 (:register 1)]) ((619 . 621)) nil (24617 9635 873075 917000) 0 nil]) ((#("lae" 0 3 (fontified t wrap-prefix #1#)) . -619) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . 3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) 622 (t 24617 9628 346832 599000)) nil (24617 9635 873091 858000) 0 nil]) ((607 . 608)) nil (24617 9628 337444 206000) 0 (:register 1)]) ((#("a" 0 1 (fontified t wrap-prefix #1#)) . 607) (t 24617 9623 274954 724000)) nil (24617 9628 337455 659000) 0 nil]) ((558 . 563)) nil (24617 9623 257727 998000) 0 (:register 1)]) ((#("tdlcen" 0 6 (fontified t wrap-prefix #1# insert-in-front-hooks #2#)) . 558) (undo-tree-id74 . 6) (undo-tree-id75 . -6) (undo-tree-id76 . -6) (t 24617 9621 299002 328000)) nil (24617 9623 257759 499000) 0 nil]) ((551 . 557) (#("Teggle" 0 1 (fontified t wrap-prefix #1#) 1 6 (fontified t wrap-prefix #1#)) . -551) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . -6) 557 (t 24617 9619 131054 577000)) nil (24617 9621 289263 529000) 0 (:register 1)]) ((#("
" 0 1 (fontified t wrap-prefix #1#)) . 551) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1)) nil (24617 9619 121467 10000) 0 (:register 1)]) ((#("https://beta.openai.com/playground" 0 33 (fontified t help-echo #5="LINK: https://beta.openai.com/playground" htmlize-link #4=(:uri "https://beta.openai.com/playground") wrap-prefix #1# face org-link mouse-face highlight keymap #3=(keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 33 34 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo #5# htmlize-link #4# wrap-prefix #1# face org-link mouse-face highlight keymap #3# font-lock-multiline t)) . 551) (undo-tree-id37 . -34) (undo-tree-id38 . -34) (undo-tree-id39 . -34) (undo-tree-id40 . -34) (undo-tree-id41 . -34) (undo-tree-id42 . -34)) nil (24617 9619 121491 324000) 0 nil]) ((#("
" 0 1 (fontified t wrap-prefix #1# display nil insert-in-front-hooks #2#)) . 551) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1)) nil (24617 9619 121521 382000) 0 nil]) ((#("Togg" 0 4 (fontified t wrap-prefix #1#)) . 551) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -1) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -2) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -3) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . 4) (undo-tree-id69 . -4) (undo-tree-id70 . -4)) nil (24617 9619 121563 698000) 0 nil]) ((nil rear-nonsticky nil 749 . 750) (nil fontified nil 591 . 750) (591 . 750)) nil (24617 9619 121573 17000) 0 nil]) ((590 . 591)) nil (24617 9619 121576 997000) 0 nil]) ((nil rear-nonsticky nil 589 . 590) (nil fontified nil 556 . 590) (nil fontified t 556 . 590) (nil wrap-prefix #1# 556 . 590) (nil face default 556 . 590) (nil insert-in-front-hooks #2# 556 . 590) (556 . 590)) nil (24617 9619 121584 698000) 0 nil]) ((555 . 556)) nil (24617 9619 121590 958000) 0 nil]) ((551 . 555)) nil (24617 9619 121593 991000) 0 nil]) ((550 . 551) (t 24617 9590 419748 280000)) nil (24617 9619 121597 838000) 0 nil]) ((540 . 550)) nil (24617 9590 409901 44000) 0 (:register 1)]) ((#("p" 0 1 (fontified t wrap-prefix #1# face org-level-2)) . -540) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 541) nil (24617 9590 409931 703000) 0 nil]) ((532 . 541) (t 24617 9585 619864 577000)) nil (24617 9590 409939 904000) 0 nil]) ((531 . 532)) nil (24617 9585 610183 823000) 0 (:register 1)]) ((530 . 531)) nil (24617 9585 610193 843000) 0 nil]) ((529 . 530)) nil (24617 9585 610199 778000) 0 nil]) ((528 . 529) (t 24617 9581 827956 519000)) nil (24617 9585 610204 597000) 0 nil]) ((510 . 520)) nil (24617 9581 818205 904000) 0 (:register 1)]) ((#("L" 0 1 (fontified t wrap-prefix #1# face org-level-1)) . -510) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 511) nil (24617 9581 818255 775000) 0 nil]) ((#("a" 0 1 (fontified t wrap-prefix #1# face org-level-1)) . -511) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 512) nil (24617 9581 818275 99000) 0 nil]) ((509 . 512) (t 24617 9578 420039 203000)) nil (24617 9581 818281 849000) 0 nil]) ((508 . 517)) nil (24617 9578 410250 403000) 0 (:register 1)]) ((507 . 508)) nil (24617 9578 410261 93000) 0 nil]) ((505 . 507) (t 24617 7720 798459 216000)) nil (24617 9578 410267 387000) 0 nil]) ((#("
" 0 1 (fontified t wrap-prefix "  ")) . -505) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 506) nil (24617 7720 788935 680000) 0 (:register 94)]) ((#("
" 0 1 (rear-nonsticky t fontified t wrap-prefix "  ")) . -506) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 507 (t 24617 7719 418479 734000)) nil (24617 7720 788987 950000) 0 nil]) ((nil rear-nonsticky nil 506 . 507) (nil fontified nil 506 . 507) (nil fontified nil 501 . 506) (nil fontified nil 488 . 501) (nil fontified nil 479 . 488) (nil fontified nil 478 . 479) (nil fontified nil 457 . 478) (nil fontified nil 455 . 457) (nil fontified nil 454 . 455) (nil fontified nil 453 . 454) (nil fontified nil 452 . 453) (nil fontified nil 365 . 452) (nil fontified nil 363 . 365) (nil fontified nil 362 . 363) (nil fontified nil 361 . 362) (nil fontified nil 343 . 361) (nil fontified nil 340 . 343) (nil fontified nil 336 . 340) (nil fontified nil 335 . 336) (nil fontified nil 329 . 335) (nil fontified nil 319 . 329) (nil fontified nil 317 . 319) (nil fontified nil 315 . 317) (nil fontified nil 314 . 315) (nil fontified nil 280 . 314) (nil fontified nil 277 . 280) (nil fontified nil 273 . 277) (nil fontified nil 272 . 273) (nil fontified nil 267 . 272) (nil fontified nil 256 . 267) (nil fontified nil 255 . 256) (nil fontified nil 162 . 255) (nil fontified nil 160 . 162) (nil fontified nil 157 . 160) (nil fontified nil 156 . 157) (nil fontified nil 150 . 156) (nil fontified nil 140 . 150) (nil fontified nil 138 . 140) (nil fontified nil 136 . 138) (nil fontified nil 135 . 136) (nil fontified nil 72 . 135) (nil fontified nil 70 . 72) (nil fontified nil 69 . 70) (nil fontified nil 68 . 69) (nil fontified nil 12 . 68) (nil fontified nil 8 . 12) (nil fontified nil 7 . 8) (nil fontified nil 3 . 7) (nil fontified nil 1 . 3) (1 . 507) (t . -1)) nil (24617 7719 411281 455000) 0 (:register 1)]) nil nil (24617 7718 296936 918000) 0 (:register 94)] #6# 3108 37 nil)