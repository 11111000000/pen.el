* TODO [#A] Make an emacs package which is an openai api playground
** Plan out what I need to make it, focus on making it and make it
*** What do I *need*
**** Control panel -- use transient for this, or some kind of buffer-local settings/configuration?
+ Acquired [1/2]
  - [-] Spin button for toggling a value

*** What do I _have_
  - [X] Right click menu

** I need to be able to query the API with emacs lisp to enumerate/exhaust lists of things

** I need control panels
- engine
- response length

* Comint? No.
** Don't use comint for the playground
Simply make some elisp functions for completing text.
Select the text then use a binding to complete it.
This is the basic function.
It will send a request for more text.
The region selected should not deselect.

* Objectives
** Design useful prompts
** Fast design/feedback loop (using emacs)

* Playground Settings
** Engine

** Frequency Penalty
How much to penalize new tokens
based on their existing frequency in the
text so far. Decreases the model's
likelihood to repeat the same line
1urertiatirh.

** Presence Penalty
How muoh to penalize new tokens
based on whether they.r appear in the
text so far. Increases the model's
likelihood to talk about new topics.

** Best of (Value from 1-20, Default: 1)
Generates multiple completions server-side,
and displays only the best. Streaming only
works when set to 1.

Since it acts as a multiplier on the number of
completions; this parameters can eat into your
token quota very quickly - use caution!

** Stop Sequences
Up to four sequences where the API will
step generating further tokens. The
returned text will not contain the step
sequence.

** Inject Start Text
Text to append after the user's input to
format the model for a response.

** Inject Restart Text
Text to append after the model's generation to continue the patterned structure.

** Show Probabilities
Toggle token highlighting which indicates how
likely a token was to be generated. Helps to
debug a given generation, or see alternative
options for a token.

+ States
  - Off
  - Most likely
  - Least likely
  - Full spectrum