* TODO [#A] Make an emacs package which is an openai api playground
** Plan out what I need to make it, focus on making it and make it
*** What do I *need*
**** Control panel -- use transient for this, or some kind of buffer-local settings/configuration?
+ Acquired [1/2]
  - [-] Spin button for toggling a value

*** What do I _have_
  - [X] Right click menu

** I need to be able to query the API with emacs lisp to enumerate/exhaust lists of things

** I need control panels
- engine
- response length

* Implementation
** Backend
*** =openai= command from =pip=
#+BEGIN_SRC sh -n :sps bash :async :results none
  py -36 i openai
#+END_SRC

#+BEGIN_SRC sh -n :sps bash :async :results none
  openai --help
#+END_SRC

* Comint? No.
** Don't use comint for the playground
Simply make some elisp functions for completing text.
Select the text then use a binding to complete it.
This is the basic function.
It will send a request for more text.
The region selected should not deselect.

* Objectives
** Design useful prompts
** Fast design/feedback loop (using emacs)
** Create =String->String= functions based on prompts
*** Attempt to make a 'name-generator' and create the name of the Tomato Bear
** Compatibility with DeepAI
https://deepai.org/machine-learning-model/text-generator
** Use in both Messenger and IRC
** Pre-defined search functions for finding new prompts online
** [#A] Fine-tuning -- This is the killer feature that the OpenAI playground can't do
https://github.com/cabhijith/GPT-3_Docs

#+BEGIN_SRC sh -n :sps bash :async :results none
  py -36 i openai-finetune
#+END_SRC

e:openai-ft
e:openai-ft-classification
e:openai-ft-events
e:openai-ft-report

$MYGIT/cabhijith/GPT-3_Docs