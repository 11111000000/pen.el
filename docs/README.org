* Pen project timeline
+ Stage 1
  + Implementation [2/2]
    - [X] emacs-lisp functions are generated from YAML =.prompt= files
    - [X] Use built-in elisp functions for portability
    - [ ] Select backend interface in emacs
      - [ ] Shell interface to OpenAI to python
      - [ ] GPT-j interface
    - [ ] Dockerize Pen
      - https://github.com/semiosis/pen-docker/
+ Stage 2
  - [ ] Generations stored in Datomic
  - [ ] Prompts stored in Datomic
  - [ ] Make use of arbitrarily many git repositories that store prompts

+ Use mermaid for Gantt chart in emacs :: [[https://mullikine.github.io/posts/review-of-mermaid-markdownish-syntax-for-generating-flowcharts-digrams/][Review of 'mermaid - flowcharts, diagrams, etc.' // Bodacious Blog]]
  https://mermaid-js.github.io/mermaid-live-editor/

#+BEGIN_SRC mermaid :results raw :file project-timeline.png
gantt
        title Project timeline
        dateFormat  YYYY-MM-DD
        section Stage 1
        Generate elisp functions from YAML           :a1, 2021-03-01, 30d
        Use elisp for portability     :a1, 2021-07-02, 1d
        Select backend interface in emacs     :after a1  , 2d
        section Stage 2
        Task in sec      :2014-01-12  , 12d
        another task      : 24d
*       
#+END_SRC

#+RESULTS:
[[file:project-timeline.png]]

[[./project-timeline.png]]

** _Stage 1_
This is a dockerized =pen.el= that makes use of both GPT-3 and GPT-j.

** _Stage 2_
This is a collaborative =pen.el= with an exploration tool like loom.

https://github.com/socketteer/loom

Store prompts in Datomic.

https://semiosis.github.io/posts/representing-multiverses-with-datomic/

** Design
+ Completed [ ]
  - [X] Default behaviour of generated functions
    - [X] First argument may be selection
    - [ ]If selection then text is replaced by default
  - [X] Generate funxctions of composed prompts
  - [ ] Generate prompts from interactive keyboard macros
  - [ ] Development workflow
  - [ ] Search workflow
    - Semantic search for =straight.el=
    - Semantic search for =nixos.el=
    - Semantic concordance for =KJV bible=

** Future features
*** A pipeline for fine-tuning
**** GPT-3
- [[./docs/todo/fine-tuning.org]]
- https://github.com/semiosis/fine-tuning-gpt-3/
*** =imaginary-mode=
- http://github.com/semiosis/pen.el/blob/master/docs/todo/imaginary-mode.org
  - [[./docs/todo/imaginary-mode.org]]
- https://semiosis.github.io/posts/imaginary-programming-with-gpt-3/